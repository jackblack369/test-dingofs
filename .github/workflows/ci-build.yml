name: CI Build

on:
  push:
    branches: [ "**" ]
    tags:
      - '*'
  pull_request:
    branches: [ "**" ]

env:
  BUILD_TYPE: Release

jobs:
  build:
    runs-on: ubuntu-latest
    #container: rockylinux/rockylinux:9.3
    #container: dingodatabase/dingo-eureka:rocky9-fs

    steps:
    - uses: actions/checkout@v4

    - name: Check disk size
      run: |
        echo "Disk size init:"
        df -h

    - name: Check which sudo
      run: |
        echo "Check which sudo:"
        which sudo
        echo "Current path:"
        pwd
        echo "Current files:"
        ls

    - name: Check current dir sub dir disk size
      run: |
        echo "Check current dir sub dir disk size:"
        du -h --max-depth=1

    - name: Copy dingofs repository
      run: |
        echo "Move dingofs repository"
        sudo cp -r /home/runner/work/test-dingofs/test-dingofs /mnt/
        echo "Check /mnt/test-dingofs"
        ls -l /mnt/test-dingofs
        sudo chown $USER:$USER /mnt/test-dingofs

    - name: Configure Docker data-root
      run: |
        sudo systemctl stop docker
        sudo systemctl stop docker.socket
        sudo mkdir -p /mnt/docker
        echo '{ "data-root": "/mnt/docker" }' | sudo tee /etc/docker/daemon.json
        if [ -d /var/lib/docker ]; then
          sudo mv /var/lib/docker /mnt/docker || true
        fi
        sudo systemctl start docker.socket
        sudo systemctl start docker
        docker info | grep "Docker Root Dir"

    - name: Pull dingodatabase/dingo-eureka:rocky9-fs
      run: |
        docker pull dingodatabase/dingo-eureka:rocky9-fs

    - name: Init build script
      run: |
        cat <<EOF > /mnt/test-dingofs/build.sh
        #!/bin/bash
        set -x

        cd /opt/dingofs/
        ls
        git config --global --add safe.directory /opt/dingofs

        # make file_dep
        # make file_build only=//src/* release=1
        # make file_deploy_config

        if [ $? -ne 0 ]
        then
            echo "build failed"
            exit -1
        fi
        (mkdir -p docker/rocky9/dingofs && cd docker/rocky9/dingofs && dd if=/dev/urandom of=randomfile bs=1M count=10)
        tar -czvf dingofs.tar.gz -C docker/rocky9 dingofs

        echo "DingoFS Build finished"
        EOF
        chmod +x /mnt/test-dingofs/build.sh

    - name: Record event type
      run: |
        branchName=$(echo "${{ github.ref_name }}")
        echo "branch name is: $branchName"
        echo "$branchName" > branch_name.txt

        commitId="${{ github.sha }}"
        shortCommitId=${commitId:0:7}
        echo "commit id is: $shortCommitId"
        echo "$shortCommitId" > commit_id.txt

        echo "hello dingofs" > event.txt
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "pull_request" > event.txt
        elif [ "${{ github.event_name }}" == "push" ]; then
          if [[ "${{ github.ref }}" == refs/tags/* ]]; then
            echo "tag" > event.txt
            tagInfo=$(echo "${{ github.ref }}" | sed 's/refs\/tags\///')
            echo "$tagInfo" > tag_name.txt
            echo "TAG_NAME=$tagInfo" >> $GITHUB_ENV
          else
            echo "push" > event.txt
            echo "TAG_NAME=latest" >> $GITHUB_ENV
          fi
        fi
    
    - name: Save event type info
      uses: actions/upload-artifact@v4
      with:
        name: event
        path: event.txt
        compression-level: 0
    
    - name: Save tag name info
      if: ${{ github.event_name == 'push' && startsWith(github.ref, 'refs/tags/') }}
      uses: actions/upload-artifact@v4
      with:
        name: tag_name
        path: tag_name.txt
        compression-level: 0
    
    - name: Save branch name info
      uses: actions/upload-artifact@v4
      with:
        name: branch_name
        path: branch_name.txt
        compression-level: 0

    - name: Save commit id info
      uses: actions/upload-artifact@v4
      with:
        name: commit_id
        path: commit_id.txt
        compression-level: 0

    - name: Build DingoFS
      run: |
        echo "Build DingoFS"
        docker run --name release-dingofs --rm -v /mnt/test-dingofs:/opt/dingofs/ dingodatabase/dingo-eureka:rocky9-fs /opt/dingofs/build.sh


    #- name: Test Random generate file
    #  run: |
    #    dd if=/dev/urandom of=randomfile bs=1M count=10

    #- name: Archive the dingofs directory
    #  run: |
    #    tar -czvf dingofs.tar.gz randomfile

    #- name: Check disk size
    #  run: |
    #    echo "Disk size after build:"
    #    df -h

    #- name: Remove /root/.local/dingo-eureka
    #  run: |
    #    rm -rf /root/.local/dingo-sdk

    #- name: Check disk size
    #  run: |
    #    echo "Disk size after remove eureka:"
    #    df -h

    - name: Copy artifactory to another workflow
      uses: actions/upload-artifact@v4
      with:
          name: dingofs
          path: /mnt/test-dignofs/dingofs.tar.gz
          compression-level: 0

    - name: Release
      uses: softprops/action-gh-release@v2
      # if: ${{ github.event_name == 'push'}}
      if: ${{ github.event_name == 'push' && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/')) }}
      with:
        files: dingofs.tar.gz
        name: ${{ env.TAG_NAME }}
        tag_name: ${{ env.TAG_NAME }}
        token: ${{ secrets.GH_TOKEN }}

